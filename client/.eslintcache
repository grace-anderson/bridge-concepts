[{"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\index.js":"1","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\reportWebVitals.js":"2","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\App.js":"3","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Home.js":"4","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\index.js":"5","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Footer\\index.js":"6","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\queries.js":"7","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\mutations.js":"8","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\Navbar.js":"9","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\InfoSection.js":"10","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ProjectForm.js":"11","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ClientForm.js":"12","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\BridgeForm.js":"13","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\LocationForm.js":"14","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\Map.js":"15","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Login.js":"16","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Signup.js":"17","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\auth.js":"18","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\About.js":"19","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\GlobalState.js":"20","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\reducers.js":"21","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\actions.js":"22","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\PlacesAutocomplete.js":"23","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\SubmitForm.js":"24","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Projects.js":"25","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectList.js":"26","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectCard.js":"27","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Project.js":"28","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Submitted.js":"29"},{"size":500,"mtime":1657234935257,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1657234935258,"results":"32","hashOfConfig":"31"},{"size":2745,"mtime":1659591670897,"results":"33","hashOfConfig":"31"},{"size":1146,"mtime":1659586632937,"results":"34","hashOfConfig":"31"},{"size":742,"mtime":1658461245905,"results":"35","hashOfConfig":"31"},{"size":856,"mtime":1658460613796,"results":"36","hashOfConfig":"31"},{"size":665,"mtime":1659586598821,"results":"37","hashOfConfig":"31"},{"size":2499,"mtime":1659573065748,"results":"38","hashOfConfig":"31"},{"size":1734,"mtime":1659596953743,"results":"39","hashOfConfig":"31"},{"size":421,"mtime":1658456019015,"results":"40","hashOfConfig":"31"},{"size":2279,"mtime":1659505266865,"results":"41","hashOfConfig":"31"},{"size":4518,"mtime":1659490294709,"results":"42","hashOfConfig":"31"},{"size":4389,"mtime":1659490576191,"results":"43","hashOfConfig":"31"},{"size":575,"mtime":1659077466216,"results":"44","hashOfConfig":"31"},{"size":5789,"mtime":1659585770581,"results":"45","hashOfConfig":"31"},{"size":2510,"mtime":1659333141713,"results":"46","hashOfConfig":"31"},{"size":3395,"mtime":1659603725130,"results":"47","hashOfConfig":"31"},{"size":686,"mtime":1659604504713,"results":"48","hashOfConfig":"31"},{"size":1019,"mtime":1658834581500,"results":"49","hashOfConfig":"31"},{"size":595,"mtime":1659141451886,"results":"50","hashOfConfig":"31"},{"size":884,"mtime":1659508199986,"results":"51","hashOfConfig":"31"},{"size":231,"mtime":1659141466384,"results":"52","hashOfConfig":"31"},{"size":2564,"mtime":1659077399834,"results":"53","hashOfConfig":"31"},{"size":973,"mtime":1659591709726,"results":"54","hashOfConfig":"31"},{"size":526,"mtime":1659401692318,"results":"55","hashOfConfig":"31"},{"size":1738,"mtime":1659590599426,"results":"56","hashOfConfig":"31"},{"size":682,"mtime":1659410188333,"results":"57","hashOfConfig":"31"},{"size":2322,"mtime":1659590983863,"results":"58","hashOfConfig":"31"},{"size":335,"mtime":1659591577464,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1n96i4n",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\index.js",[],["132","133"],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\reportWebVitals.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\App.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Home.js",["134","135","136"],"import React, { useEffect } from 'react';\nimport Auth from '../utils/auth'\n\n// Import Components for page\nimport InfoSection from '../components/Home/InfoSection';\nimport ProjectForm from '../components/Home/ProjectForm';\nimport ClientForm from '../components/Home/ClientForm';\nimport BridgeForm from '../components/Home/BridgeForm';\nimport LocationForm from '../components/Home/LocationForm';\nimport SubmitForm from '../components/Home/SubmitForm';\n\nimport { useUserContext } from \"../utils/GlobalState\";\n\nimport About from './About'\n\nconst Home = () => {\n  // Add context and state\n  const [state, dispatch] = useUserContext();\n\n\n  return (\n    <main className=\"bg-Light text-Grey\">\n      <div>\n        {!state.user._id ? (\n          <About />\n        ) : (\n          <div>\n            <div id=\"infoSection\">\n              <InfoSection />\n            </div>\n            <div id=\"formsSection\">\n              <ProjectForm />\n              <ClientForm />\n              <BridgeForm />\n              <LocationForm />\n              <SubmitForm />\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Footer\\index.js",["137","138"],"import React from 'react';\n// Import hooks from React Router\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  // We retrieve the current `location` object data from React Router\n  const location = useLocation();\n  // We get React Router's history object so we can access and adjust browser history\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        <h5>&copy; {new Date().getFullYear()} - Made by Tim Polo</h5>\n        <small>All designs are conceptual only, and are for the purposes of discussion and pricing.\n          All designs from this website are NOT FOR CONSTRUCTION, for further information consult with a Structural Engineer\n        </small>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\queries.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\mutations.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\Navbar.js",["139","140","141"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth'\n\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nconst AppNavbar = () => {\n  // Add context and state\n  const [state, dispatch] = useUserContext();\n  const logState = () => {\n    console.log(state)\n  }\n\n  return (\n    <div>\n      <nav className=\"form-card-div p-0 my-2\">\n        <div className=\"container p-0 m-0\" id=\"navbarNav\">\n          <ul className=\"row w-100\">\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Black\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Grey\" to=\"/projects\">Projects</Link>\n            </li>\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Grey\" to=\"/about\">About</Link>\n            </li>\n            {!state.user._id ? (\n              <li className=\"px-1 mx-1\">\n                <Link className=\"nav-link text-Grey\" to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              <div>\n                <li className=\"px-1 mx-1\">\n                  <Link className=\"nav-link text-Grey\" to=\"/\" onClick={Auth.logout}>Logout</Link>\n                </li>\n              </div>\n            )}\n            {!state.user._id ? (\n              <li className=\"px-1 mx-1\">\n                <Link className=\"nav-link text-Grey\" to=\"/signup\">Sign Up</Link>\n              </li>) : (<div></div>)}\n            {state.user.type == 'admin' ? (\n              <li className=\"p-1 m-1 text-danger\" onClick={logState}>logState</li>) : (<div></div>)}\n          </ul>\n        </div>\n      </nav>\n    </div>\n\n  );\n};\n\nexport default AppNavbar;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\InfoSection.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ProjectForm.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ClientForm.js",["142"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_CLIENT } from '../../utils/mutations';\n\n// Context and reducer imports\nimport { UPDATE_CLIENT } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction ClientForm(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n\n    const [addClient] = useMutation(ADD_CLIENT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await addClient({\n                variables: {\n                    firstName: formState.firstName,\n                    lastName: formState.lastName,\n                    email: formState.email,\n                    phone: formState.phone,\n                    unit: formState.unit,\n                    number: formState.number,\n                    streetName: formState.streetName,\n                    streetType: formState.streetType,\n                    suburb: formState.suburb,\n                    state: formState.state,\n                    country: formState.country,\n                    projectId: state.project._id\n                },\n            })\n            const data = mutationResponse.data.addClient\n            // State Update\n            dispatch({\n                type: UPDATE_CLIENT,\n                payload: data\n            })\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 2: Enter Client Details</u></h4>\n            <form\n                className=\"form-contents-div\"\n                onSubmit={handleFormSubmit}\n            >\n                <div className=\"col-12 col-lg-9 \">\n                    <input id=\"firstName\" name=\"firstName\" placeholder=\"First Name\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"lastName\" placeholder=\"Last Name\" name=\"lastName\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"email\" placeholder=\"Email\" name=\"email\" type=\"email\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"phone\" placeholder=\"Phone\" name=\"phone\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <div>\n                        <label><u>Billing Address</u></label>\n                        <br />\n                        <input id=\"unit\" placeholder=\"Unit\" name=\"unit\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"number\" placeholder=\"StreetNumber\" name=\"number\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"streetName\" placeholder=\"Billing streetName\" name=\"streetName\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"streetType\" placeholder=\"Billing streetType\" name=\"streetType\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"suburb\" placeholder=\"Billing suburb\" name=\"suburb\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"state\" placeholder=\"Billing state\" name=\"state\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"country\" placeholder=\"Billing country\" name=\"country\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-lg-3 m-1\">\n                    <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit Step</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ClientForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\BridgeForm.js",["143"],"import React, { useState } from 'react';\nimport Select from 'react-select'\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_BRIDGE_TO_PROJECT } from '../../utils/mutations';\n\n// Context and reducer imports\nimport { UPDATE_BRIDGE } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction BridgeForm(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n\n    const bridgeOptions = {\n        type: [\n            { value: 'steel', label: 'Steel' },\n            { value: 'concrete', label: 'Concrete' },\n            { value: 'timber', label: 'Timber' }\n        ],\n        length: [\n            { value: '8', label: '8m' },\n            { value: '10', label: '10m' },\n            { value: '12', label: '12m' },\n            { value: '14', label: '14m' },\n            { value: '20', label: '20m' }\n        ],\n        width: [\n            { value: '4.5', label: '4.5m' },\n            { value: '7.2', label: '7.2m' }\n        ],\n        loadType: [\n            { value: 'sm1600', label: 'SM1600' },\n            { value: 't44', label: 'T44' },\n            { value: 'd8Dozer', label: 'D8 Dozer' },\n            { value: '30tExcavator', label: '30t Excavator' }\n        ],\n        openToSuggestions: [\n            { value: true, label: 'I am open to Suggestions' },\n            { value: false, label: 'This is the exact bridge type I want' }\n        ]\n    }\n\n\n    const [addBridgeToProject] = useMutation(ADD_BRIDGE_TO_PROJECT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        console.log(state.project._id)\n        // Database update\n        try {\n            const mutationResponse = await addBridgeToProject({\n                variables: {\n                    projectId: state.project._id,\n                    type: formState.type,\n                    length: formState.length,\n                    width: formState.width,\n                    loadType: formState.loadType,\n                    openToSuggetions: formState.openToSuggetions\n                },\n            });\n            const data = mutationResponse.data.addBridgeToProject;\n            // State Update\n            dispatch({\n                type: UPDATE_BRIDGE,\n                payload: data\n            })\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleTypeChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            type: value,\n        });\n    };\n    const handleLengthChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            length: value,\n        });\n    };\n    const handleWidthChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            width: value,\n        });\n    };\n    const handleLoadTypeChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            loadType: value,\n        });\n    };\n    const handleOpenToSuggestionsChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            openToSuggestions: value,\n        });\n    };\n\n    return (\n        <div className=\"form-card-div container\">\n            <h4><u>Step 3: Choose a Bridge Type</u></h4>\n            <div className=\"row\">\n                <Select className=\"col-6 my-1\" options={bridgeOptions.type} onChange={handleTypeChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.length} onChange={handleLengthChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.width} onChange={handleWidthChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.loadType} onChange={handleLoadTypeChange} />\n                <Select className=\"col-12 my-1\" options={bridgeOptions.openToSuggestions} onChange={handleOpenToSuggestionsChange} />\n            </div>\n            <div className=\"col-12 col-lg-3 m-1\">\n                <button className=\"btn btn-secondary my-1\" onClick={handleFormSubmit}>Submit Step</button>\n            </div>\n        </div>\n    );\n};\n\nexport default BridgeForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\LocationForm.js",["144","145","146"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import Auth from '../utils/auth';\n// import { ADD_USER } from '../utils/mutations';\nimport Map from './Map';\n\nfunction LocationForm(props) {\n    const [formState, setFormState] = useState();\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 4: Enter Location Details</u></h4>\n\n            <div id=\"googleMapsDiv\">\n                <Map />\n            </div>\n\n        </div>\n    );\n};\n\nexport default LocationForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\Map.js",["147","148","149","150","151","152","153","154"],"import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript, Polyline, GroundOverlay, GroundOverlayProps } from \"@react-google-maps/api\";\r\n\r\nimport './map.css'\r\nimport PlacesAutocomplete from './PlacesAutocomplete';\r\nimport { ADD_LOCATION_TO_BRIDGE } from '../../utils/mutations';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\n\r\n// Context and reducer imports\r\nimport { UPDATE_LOCATION } from '../../utils/actions';\r\nimport { useUserContext } from \"../../utils/GlobalState\";\r\n\r\nconst Map = function () {\r\n    const [formState, setFormState] = useState()\r\n    const [state, dispatch] = useUserContext();\r\n    const [addLocationToBridge] = useMutation(ADD_LOCATION_TO_BRIDGE);\r\n\r\n    // Google Maps Variables\r\n    const [map, setMap] = useState(null)\r\n    const options = useMemo(() => ({ clickableIcons: false }), [])\r\n    const mapRef = useRef();\r\n    const [mapCenter, setMapCenter] = useState({ lat: -30.64075130591417, lng: 152.8562340464637 })\r\n    const [polyLinePath, setPolyLinePath] = useState([])\r\n\r\n    const { isLoaded } = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyAEaBYrXj5DymS6B3z7EFqB1HatbX-KY2Q\",\r\n        libraries: ['places']\r\n    });\r\n\r\n    const polyLineOptions = {\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: true,\r\n        draggable: true,\r\n        editable: true,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    const bounds = {\r\n        north: -30.740,\r\n        south: -30.640547773894426,\r\n        east: 152.75637,\r\n        west: 152.856378415811\r\n    };\r\n\r\n\r\n\r\n    //Form submits\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Form State\", formState)\r\n        // Database update\r\n        try {\r\n            const mutationResponse = await addLocationToBridge({\r\n                variables: {\r\n                    bridgeId: state.bridge._id,\r\n                    lat0: formState.lat0,\r\n                    lng0: formState.lng0,\r\n                    elev0: formState.elev0,\r\n                    lat1: formState.lat1,\r\n                    lng1: formState.lng1,\r\n                    elev1: formState.elev1\r\n                },\r\n            });\r\n            const thisData = mutationResponse.thisData.addLocationToBridge\r\n            // State Update\r\n            dispatch({\r\n                type: UPDATE_LOCATION,\r\n                payload: thisData\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n\r\n    const handlePolylineChange = (event) => {\r\n        const thisLat = event.latLng.lat();\r\n        const thisLng = event.latLng.lng();\r\n\r\n        switch (event.vertex) {\r\n            case 0:\r\n                setFormState({\r\n                    ...formState,\r\n                    lat0: thisLat,\r\n                    lng0: thisLng,\r\n                    elev0: 0,\r\n                });\r\n                console.log(formState)\r\n                break;\r\n            case 1:\r\n                setFormState({\r\n                    ...formState,\r\n                    lat1: thisLat,\r\n                    lng1: thisLng,\r\n                    elev1: 0,\r\n                });\r\n                console.log(formState)\r\n                break;\r\n            default:\r\n                console.log(\"Error with latitude and longitude form State\")\r\n        }\r\n    };\r\n\r\n    function drawPolyline(event) {\r\n\r\n        setPolyLinePath([{ lat: event.latLng.lat(), lng: event.latLng.lng() - 0.0001 }, { lat: event.latLng.lat(), lng: event.latLng.lng() + 0.0001 }])\r\n    }\r\n\r\n    if (!isLoaded) {\r\n        return (<div><p>Loading....</p></div>)\r\n    } else {\r\n\r\n        return (\r\n            <div className=\"map\">\r\n                <h5>1. Search for a nearby address to zoom to the general location.</h5>\r\n                <h5>2. Double click to place the bridge.</h5>\r\n                <h5>3. Then drag the ends to set the bridge centreline</h5>\r\n                <div className=\"w-100 m-1\">\r\n                    {/* Pass a setMapCenter function down to Places (the child) and call it */}\r\n                    <PlacesAutocomplete zoomToSearchAddress={setMapCenter} />\r\n                </div>\r\n                <div className=\"col-12 col-lg-3 m-1\">\r\n                    <button className=\"btn btn-secondary my-1\" type=\"submit\">Search</button>\r\n                </div>\r\n                <div>\r\n                    {/* <ScriptLoaded> */}\r\n                    <GoogleMap\r\n                        zoom={19}\r\n                        center={mapCenter}\r\n                        mapTypeId='satellite'\r\n                        mapContainerClassName=\"google-map\"\r\n                        options={options}\r\n                        onDblClick={drawPolyline}\r\n                    >\r\n                        <Polyline\r\n                            path={polyLinePath}\r\n                            options={polyLineOptions}\r\n                            onMouseUp={handlePolylineChange}\r\n                        />\r\n                        {/* <GroundOverlay\r\n                            key={'url'}\r\n                            url='https://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg'\r\n                            bounds={bounds}\r\n                        /> */}\r\n                    </GoogleMap>\r\n                    {/* </ScriptLoaded> */}\r\n                </div>\r\n                <div className=\"col-12 col-lg-3 m-1\">\r\n                    <button\r\n                        className=\"btn btn-secondary my-1\"\r\n                        onClick={handleFormSubmit}\r\n                    >Submit Step</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Login.js",["155"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\n// Context and reducer imports\nimport { UPDATE_USER } from '../utils/actions';\nimport { useUserContext } from \"../utils/GlobalState\";\n\nfunction Login(props) {\n  const [state, dispatch] = useUserContext();\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  // We get React Router's navigate object so we can access and adjust browser history\n  const navigate = useNavigate();\n\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const data = { ...mutationResponse.data.login.user };\n      const token = mutationResponse.data.login.token;\n      dispatch({\n        type: UPDATE_USER,\n        payload: data\n      })\n      Auth.login(token);\n      navigate('/')\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 form-card-div\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n            className=\"m-1\"\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n            className=\"m-1\"\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"col-12 col-lg-3 m-1\">\n          <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Signup.js",["156"],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Select from 'react-select';\n\n// Context and reducer imports\nimport { UPDATE_USER } from '../utils/actions';\nimport { useUserContext } from \"../utils/GlobalState\";\n\nfunction Signup(props) {\n  const [state, dispatch] = useUserContext();\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const navigate = useNavigate();\n\n  const userTypeOptions = [\n    { value: 'council', label: 'council' },\n    { value: 'contractor', label: 'contractor' },\n    { value: 'consultant', label: 'consultant' },\n    { value: 'government', label: 'government' },\n    { value: 'admin', label: 'admin' }\n  ]\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n        type: formState.type\n      },\n    });\n    const data = { ...mutationResponse.data.addUser.user };\n    const token = mutationResponse.data.addUser.token;\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    })\n    Auth.login(token);\n    navigate('/')\n  };\n\n  const handleTypeChange = (selectedOption) => {\n    const { value } = selectedOption;\n    setFormState({\n      ...formState,\n      type: value,\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container form-card-div\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit} className=\"form-contents-div\">\n        <div className=\"flex-row form-contents-div\">\n          <input placeholder=\"First Name\" name=\"firstName\" type=\"firstName\" id=\"firstName\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input placeholder=\"Last Name\" name=\"lastName\" type=\"lastName\" id=\"lastName\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input placeholder=\"Company\" name=\"company\" id=\"company\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input placeholder=\"Email\" name=\"email\" type=\"email\" id=\"email\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input placeholder=\"Password\" name=\"password\" type=\"password\" id=\"pwd\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input id=\"phone\" placeholder=\"Phone\" name=\"phone\" type=\"number\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <input id=\"address\" placeholder=\"Billing Address\" name=\"address\" type=\"text\" className=\"m-1\"\n            onChange={handleChange}\n          />\n          <div className=\"row\">\n            <Select className=\"col-6 my-1\" options={userTypeOptions} onChange={handleTypeChange} />\n          </div>\n          <div className=\"col-12 col-lg-3 m-1\">\n            <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\auth.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\About.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\reducers.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\actions.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\PlacesAutocomplete.js",["157","158","159"],"import React, { useState, useMemo, useRef } from 'react';\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\n\r\nfunction PlacesAutocomplete(props) {\r\n    const {\r\n        ready,\r\n        value,\r\n        suggestions: { status, data },\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions: {\r\n            /* Define search scope here */\r\n        },\r\n        debounce: 300,\r\n    });\r\n    const ref = useOnclickOutside(() => {\r\n        // When user clicks outside of the component, we can dismiss\r\n        // the searched suggestions by calling this method\r\n        clearSuggestions();\r\n    });\r\n\r\n    const handleInput = (e) => {\r\n        // Update the keyword of the input element\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSelect =\r\n        ({ description }) =>\r\n            async () => {\r\n                // When user selects a place, we can replace the keyword without request data from API\r\n                // by setting the second parameter to \"false\"\r\n                await setValue(description, false);\r\n                clearSuggestions();\r\n\r\n                // Get latitude and longitude via utility functions\r\n                await getGeocode({ address: description }).then((results) => {\r\n                    const { lat, lng } = getLatLng(results[0]);\r\n                    // set map to this location\r\n                    props.zoomToSearchAddress({ lat: lat, lng: lng })\r\n                });\r\n            };\r\n\r\n    const renderSuggestions = () =>\r\n        data.map((suggestion) => {\r\n            const {\r\n                place_id,\r\n                structured_formatting: { main_text, secondary_text },\r\n            } = suggestion;\r\n\r\n            return (\r\n                <li key={place_id} onClick={handleSelect(suggestion)}>\r\n                    <strong>{main_text}</strong> <small>{secondary_text}</small>\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <div ref={ref} className=\"w-100 p-2\">\r\n            <input className=\"w-100\"\r\n                value={value}\r\n                onChange={handleInput}\r\n                disabled={!ready}\r\n                placeholder=\"Search for a nearby address...\"\r\n            />\r\n            {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\r\n            {status === \"OK\" && <ul>{renderSuggestions()}</ul>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlacesAutocomplete","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\SubmitForm.js",["160","161"],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction ProjectForm(props) {\n\n    const navigate = useNavigate();\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        // Database update\n        try {\n            navigate('/submitted')\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 5: Review Your Data and Submit</u></h4>\n            <p>Please review your data above, and press the Project Submit Button when ready.</p>\n            <form\n                className=\"form-contents-div\"\n                onSubmit={handleFormSubmit}\n            >\n                <div className=\"col-12 col-lg-3 m-1\">\n                    <button className=\"btn btn-danger my-1\" type=\"submit\">Submit Project</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ProjectForm;","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Projects.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectList.js",["162","163","164"],"import React, { useEffect } from 'react';\nimport ProjectCard from './ProjectCard';\nimport { useUserContext } from '../../utils/GlobalState';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PROJECTS } from '../../utils/queries';\n\nfunction ProjectList() {\n  const [state, dispatch] = useUserContext();\n\n  const { loading, data } = useQuery(QUERY_PROJECTS);\n\n  if (loading) {\n\n    return <div>Loading...</div>;\n  } else if (state.user.type === 'admin') {\n    const projectsArray = data.projects;\n    console.log(data.projects)\n\n    return (\n      <div className=\"my-2\">\n        <h2>Projects:</h2>\n        {data ? (\n          <div className=\"flex-row\">\n            {projectsArray\n              .map((project) => (\n                <ProjectCard\n                  _id={project._id}\n                  key={project.name}\n                  name={project.name}\n                  reference={project.reference}\n                />\n              ))}\n          </div>\n        ) : (\n          <div><p>Loading</p></div>\n        )}\n      </div>\n    );\n  } else {\n    const projectsArray = data.projects;\n    console.log(data.projects)\n\n    return (\n      <div className=\"my-2\">\n        <h2>Projects:</h2>\n        {data ? (\n          <div className=\"flex-row\">\n            {projectsArray\n              .filter((project) => project.userId == state.user._id)\n              .map((project) => (\n                <ProjectCard\n                  _id={project._id}\n                  key={project.name}\n                  name={project.name}\n                  reference={project.reference}\n                />\n              ))}\n          </div>\n        ) : (\n          <div><p>Loading</p></div>\n        )}\n      </div>\n    );\n  }\n}\nexport default ProjectList;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectCard.js",["165","166","167","168","169","170"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/client';\n\n// Context and reducer imports\nimport { UPDATE_PROJECT } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction ProjectCard(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>{props.name}</u></h4>\n            <p>{props.reference}</p>\n            <Link to={`/projects/${props._id}`}>View Project</Link>\n        </div>\n    );\n};\n\nexport default ProjectCard;","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Project.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Submitted.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"179","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":12},{"ruleId":"175","severity":1,"message":"180","line":18,"column":17,"nodeType":"177","messageId":"178","endLine":18,"endColumn":25},{"ruleId":"175","severity":1,"message":"181","line":7,"column":9,"nodeType":"177","messageId":"178","endLine":7,"endColumn":17},{"ruleId":"175","severity":1,"message":"182","line":9,"column":9,"nodeType":"177","messageId":"178","endLine":9,"endColumn":17},{"ruleId":"175","severity":1,"message":"183","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"180","line":9,"column":17,"nodeType":"177","messageId":"178","endLine":9,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":43,"column":30,"nodeType":"186","messageId":"187","endLine":43,"endColumn":32},{"ruleId":"175","severity":1,"message":"188","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"189","line":9,"column":12,"nodeType":"177","messageId":"178","endLine":9,"endColumn":21},{"ruleId":"175","severity":1,"message":"190","line":9,"column":23,"nodeType":"177","messageId":"178","endLine":9,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":1,"column":44,"nodeType":"177","messageId":"178","endLine":1,"endColumn":53},{"ruleId":"175","severity":1,"message":"191","line":2,"column":46,"nodeType":"177","messageId":"178","endLine":2,"endColumn":59},{"ruleId":"175","severity":1,"message":"192","line":2,"column":61,"nodeType":"177","messageId":"178","endLine":2,"endColumn":79},{"ruleId":"175","severity":1,"message":"193","line":7,"column":23,"nodeType":"177","messageId":"178","endLine":7,"endColumn":31},{"ruleId":"175","severity":1,"message":"194","line":19,"column":12,"nodeType":"177","messageId":"178","endLine":19,"endColumn":15},{"ruleId":"175","severity":1,"message":"195","line":19,"column":17,"nodeType":"177","messageId":"178","endLine":19,"endColumn":23},{"ruleId":"175","severity":1,"message":"196","line":21,"column":11,"nodeType":"177","messageId":"178","endLine":21,"endColumn":17},{"ruleId":"175","severity":1,"message":"197","line":44,"column":11,"nodeType":"177","messageId":"178","endLine":44,"endColumn":17},{"ruleId":"175","severity":1,"message":"198","line":12,"column":10,"nodeType":"177","messageId":"178","endLine":12,"endColumn":15},{"ruleId":"175","severity":1,"message":"198","line":14,"column":10,"nodeType":"177","messageId":"178","endLine":14,"endColumn":15},{"ruleId":"175","severity":1,"message":"183","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"199","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":34},{"ruleId":"175","severity":1,"message":"200","line":1,"column":36,"nodeType":"177","messageId":"178","endLine":1,"endColumn":42},{"ruleId":"175","severity":1,"message":"183","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"188","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"180","line":8,"column":17,"nodeType":"177","messageId":"178","endLine":8,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":49,"column":51,"nodeType":"186","messageId":"187","endLine":49,"endColumn":53},{"ruleId":"175","severity":1,"message":"201","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"175","severity":1,"message":"202","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":24},{"ruleId":"175","severity":1,"message":"198","line":11,"column":12,"nodeType":"177","messageId":"178","endLine":11,"endColumn":17},{"ruleId":"175","severity":1,"message":"180","line":11,"column":19,"nodeType":"177","messageId":"178","endLine":11,"endColumn":27},{"ruleId":"175","severity":1,"message":"189","line":12,"column":12,"nodeType":"177","messageId":"178","endLine":12,"endColumn":21},{"ruleId":"175","severity":1,"message":"190","line":12,"column":23,"nodeType":"177","messageId":"178","endLine":12,"endColumn":35},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'dispatch' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'GroundOverlay' is defined but never used.","'GroundOverlayProps' is defined but never used.","'useQuery' is defined but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","'mapRef' is assigned a value but never used.","'bounds' is assigned a value but never used.","'state' is assigned a value but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useMutation' is defined but never used.","'UPDATE_PROJECT' is defined but never used.","no-global-assign","no-unsafe-negation"]