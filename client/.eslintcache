[{"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\index.js":"1","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\reportWebVitals.js":"2","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\App.js":"3","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Home.js":"4","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\index.js":"5","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Footer\\index.js":"6","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\queries.js":"7","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\mutations.js":"8","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\Navbar.js":"9","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\InfoSection.js":"10","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ProjectForm.js":"11","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ClientForm.js":"12","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\BridgeForm.js":"13","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\LocationForm.js":"14","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\Map.js":"15","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Login.js":"16","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Signup.js":"17","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\auth.js":"18","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\About.js":"19","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\GlobalState.js":"20","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\reducers.js":"21","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\actions.js":"22","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\PlacesAutocomplete.js":"23","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\SubmitForm.js":"24","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Projects.js":"25","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectList.js":"26","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectCard.js":"27","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Project.js":"28"},{"size":500,"mtime":1657234935257,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1657234935258,"results":"31","hashOfConfig":"30"},{"size":2497,"mtime":1659409532538,"results":"32","hashOfConfig":"30"},{"size":1002,"mtime":1659330720200,"results":"33","hashOfConfig":"30"},{"size":742,"mtime":1658461245905,"results":"34","hashOfConfig":"30"},{"size":856,"mtime":1658460613796,"results":"35","hashOfConfig":"30"},{"size":654,"mtime":1659494104197,"results":"36","hashOfConfig":"30"},{"size":2414,"mtime":1659493821564,"results":"37","hashOfConfig":"30"},{"size":1677,"mtime":1659493584976,"results":"38","hashOfConfig":"30"},{"size":421,"mtime":1658456019015,"results":"39","hashOfConfig":"30"},{"size":2235,"mtime":1659335249457,"results":"40","hashOfConfig":"30"},{"size":4518,"mtime":1659490294709,"results":"41","hashOfConfig":"30"},{"size":4389,"mtime":1659490576191,"results":"42","hashOfConfig":"30"},{"size":575,"mtime":1659077466216,"results":"43","hashOfConfig":"30"},{"size":5999,"mtime":1659493935003,"results":"44","hashOfConfig":"30"},{"size":2510,"mtime":1659333141713,"results":"45","hashOfConfig":"30"},{"size":2382,"mtime":1658712114652,"results":"46","hashOfConfig":"30"},{"size":684,"mtime":1658999834296,"results":"47","hashOfConfig":"30"},{"size":1019,"mtime":1658834581500,"results":"48","hashOfConfig":"30"},{"size":595,"mtime":1659141451886,"results":"49","hashOfConfig":"30"},{"size":885,"mtime":1659312699750,"results":"50","hashOfConfig":"30"},{"size":231,"mtime":1659141466384,"results":"51","hashOfConfig":"30"},{"size":2564,"mtime":1659077399834,"results":"52","hashOfConfig":"30"},{"size":892,"mtime":1659335374571,"results":"53","hashOfConfig":"30"},{"size":526,"mtime":1659401692318,"results":"54","hashOfConfig":"30"},{"size":1221,"mtime":1659410005233,"results":"55","hashOfConfig":"30"},{"size":682,"mtime":1659410188333,"results":"56","hashOfConfig":"30"},{"size":2322,"mtime":1659494218049,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1n96i4n",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\index.js",[],["126","127"],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\reportWebVitals.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\App.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Home.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Footer\\index.js",["128","129"],"import React from 'react';\n// Import hooks from React Router\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  // We retrieve the current `location` object data from React Router\n  const location = useLocation();\n  // We get React Router's history object so we can access and adjust browser history\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        <h5>&copy; {new Date().getFullYear()} - Made by Tim Polo</h5>\n        <small>All designs are conceptual only, and are for the purposes of discussion and pricing.\n          All designs from this website are NOT FOR CONSTRUCTION, for further information consult with a Structural Engineer\n        </small>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\queries.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\mutations.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Header\\Navbar.js",["130","131"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth'\n\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nconst AppNavbar = () => {\n  // Add context and state\n  const [state, dispatch] = useUserContext();\n  const logState = () => {\n    console.log(state)\n  }\n\n  return (\n    <div>\n      <nav className=\"form-card-div p-0 my-2\">\n        <div className=\"container p-0 m-0\" id=\"navbarNav\">\n          <ul className=\"row w-100\">\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Black\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Grey\" to=\"/projects\">Projects</Link>\n            </li>\n            <li className=\"px-1 mx-1\">\n              <Link className=\"nav-link text-Grey\" to=\"/about\">About</Link>\n            </li>\n            {!Auth.loggedIn() ? (\n              <li className=\"px-1 mx-1\">\n                <Link className=\"nav-link text-Grey\" to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              <div>\n                <li className=\"px-1 mx-1\">\n                  <Link className=\"nav-link text-Grey\" to=\"/about\" onClick={Auth.logout}>Logout</Link>\n                </li>\n              </div>\n            )}\n            {!Auth.loggedIn() ? (\n              <li className=\"px-1 mx-1\">\n                <Link className=\"nav-link text-Grey\" to=\"/signup\">Sign Up</Link>\n              </li>) : (<div></div>)}\n            <li className=\"p-1 m-1 text-danger\" onClick={logState}>logState</li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n\n  );\n};\n\nexport default AppNavbar;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\InfoSection.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ProjectForm.js",["132"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROJECT } from '../../utils/mutations';\n\n// Context and reducer imports\nimport { UPDATE_PROJECT } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction ProjectForm(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n\n    const [addProject] = useMutation(ADD_PROJECT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        // Database update\n        try {\n            const mutationResponse = await addProject({\n                variables: {\n                    name: formState.projectName,\n                    reference: formState.projectReference\n                },\n            });\n            const data = mutationResponse.data.addProject\n            // State Update\n            dispatch({\n                type: UPDATE_PROJECT,\n                payload: data\n            })\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 1: Enter Project Details</u></h4>\n            <form\n                className=\"form-contents-div\"\n                onSubmit={handleFormSubmit}\n            >\n                <div className=\"col-12 col-lg-9 \">\n                    <input id=\"projectName\" name=\"projectName\" placeholder=\"Project Name\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"projectReference\" placeholder=\"Your reference number\" name=\"projectReference\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"col-12 col-lg-3 m-1\">\n                    <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit Step</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ProjectForm;","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\ClientForm.js",["133"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_CLIENT } from '../../utils/mutations';\n\n// Context and reducer imports\nimport { UPDATE_CLIENT } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction ClientForm(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n\n    const [addClient] = useMutation(ADD_CLIENT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await addClient({\n                variables: {\n                    firstName: formState.firstName,\n                    lastName: formState.lastName,\n                    email: formState.email,\n                    phone: formState.phone,\n                    unit: formState.unit,\n                    number: formState.number,\n                    streetName: formState.streetName,\n                    streetType: formState.streetType,\n                    suburb: formState.suburb,\n                    state: formState.state,\n                    country: formState.country,\n                    projectId: state.project._id\n                },\n            })\n            const data = mutationResponse.data.addClient\n            // State Update\n            dispatch({\n                type: UPDATE_CLIENT,\n                payload: data\n            })\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 2: Enter Client Details</u></h4>\n            <form\n                className=\"form-contents-div\"\n                onSubmit={handleFormSubmit}\n            >\n                <div className=\"col-12 col-lg-9 \">\n                    <input id=\"firstName\" name=\"firstName\" placeholder=\"First Name\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"lastName\" placeholder=\"Last Name\" name=\"lastName\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"email\" placeholder=\"Email\" name=\"email\" type=\"email\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <input id=\"phone\" placeholder=\"Phone\" name=\"phone\" type=\"text\" className=\"m-1\"\n                        onChange={handleChange}\n                    />\n                    <div>\n                        <label><u>Billing Address</u></label>\n                        <br />\n                        <input id=\"unit\" placeholder=\"Unit\" name=\"unit\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"number\" placeholder=\"StreetNumber\" name=\"number\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"streetName\" placeholder=\"Billing streetName\" name=\"streetName\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"streetType\" placeholder=\"Billing streetType\" name=\"streetType\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"suburb\" placeholder=\"Billing suburb\" name=\"suburb\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"state\" placeholder=\"Billing state\" name=\"state\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                        <input id=\"country\" placeholder=\"Billing country\" name=\"country\" type=\"text\" className=\"m-1\"\n                            onChange={handleChange}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 col-lg-3 m-1\">\n                    <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit Step</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ClientForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\BridgeForm.js",["134"],"import React, { useState } from 'react';\nimport Select from 'react-select'\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { ADD_BRIDGE_TO_PROJECT } from '../../utils/mutations';\n\n// Context and reducer imports\nimport { UPDATE_BRIDGE } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction BridgeForm(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n\n    const bridgeOptions = {\n        type: [\n            { value: 'steel', label: 'Steel' },\n            { value: 'concrete', label: 'Concrete' },\n            { value: 'timber', label: 'Timber' }\n        ],\n        length: [\n            { value: '8', label: '8m' },\n            { value: '10', label: '10m' },\n            { value: '12', label: '12m' },\n            { value: '14', label: '14m' },\n            { value: '20', label: '20m' }\n        ],\n        width: [\n            { value: '4.5', label: '4.5m' },\n            { value: '7.2', label: '7.2m' }\n        ],\n        loadType: [\n            { value: 'sm1600', label: 'SM1600' },\n            { value: 't44', label: 'T44' },\n            { value: 'd8Dozer', label: 'D8 Dozer' },\n            { value: '30tExcavator', label: '30t Excavator' }\n        ],\n        openToSuggestions: [\n            { value: true, label: 'I am open to Suggestions' },\n            { value: false, label: 'This is the exact bridge type I want' }\n        ]\n    }\n\n\n    const [addBridgeToProject] = useMutation(ADD_BRIDGE_TO_PROJECT);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        console.log(state.project._id)\n        // Database update\n        try {\n            const mutationResponse = await addBridgeToProject({\n                variables: {\n                    projectId: state.project._id,\n                    type: formState.type,\n                    length: formState.length,\n                    width: formState.width,\n                    loadType: formState.loadType,\n                    openToSuggetions: formState.openToSuggetions\n                },\n            });\n            const data = mutationResponse.data.addBridgeToProject;\n            // State Update\n            dispatch({\n                type: UPDATE_BRIDGE,\n                payload: data\n            })\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleTypeChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            type: value,\n        });\n    };\n    const handleLengthChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            length: value,\n        });\n    };\n    const handleWidthChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            width: value,\n        });\n    };\n    const handleLoadTypeChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            loadType: value,\n        });\n    };\n    const handleOpenToSuggestionsChange = (selectedOption) => {\n        const { value } = selectedOption;\n        setFormState({\n            ...formState,\n            openToSuggestions: value,\n        });\n    };\n\n    return (\n        <div className=\"form-card-div container\">\n            <h4><u>Step 3: Choose a Bridge Type</u></h4>\n            <div className=\"row\">\n                <Select className=\"col-6 my-1\" options={bridgeOptions.type} onChange={handleTypeChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.length} onChange={handleLengthChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.width} onChange={handleWidthChange} />\n                <Select className=\"col-6 my-1\" options={bridgeOptions.loadType} onChange={handleLoadTypeChange} />\n                <Select className=\"col-12 my-1\" options={bridgeOptions.openToSuggestions} onChange={handleOpenToSuggestionsChange} />\n            </div>\n            <div className=\"col-12 col-lg-3 m-1\">\n                <button className=\"btn btn-secondary my-1\" onClick={handleFormSubmit}>Submit Step</button>\n            </div>\n        </div>\n    );\n};\n\nexport default BridgeForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\LocationForm.js",["135","136","137"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import Auth from '../utils/auth';\n// import { ADD_USER } from '../utils/mutations';\nimport Map from './Map';\n\nfunction LocationForm(props) {\n    const [formState, setFormState] = useState();\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 4: Enter Location Details</u></h4>\n\n            <div id=\"googleMapsDiv\">\n                <Map />\n            </div>\n\n        </div>\n    );\n};\n\nexport default LocationForm;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\Map.js",["138","139","140","141","142","143","144","145"],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Login.js",["146"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\n// Context and reducer imports\nimport { UPDATE_USER } from '../utils/actions';\nimport { useUserContext } from \"../utils/GlobalState\";\n\nfunction Login(props) {\n  const [state, dispatch] = useUserContext();\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  // We get React Router's navigate object so we can access and adjust browser history\n  const navigate = useNavigate();\n\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const data = { ...mutationResponse.data.login.user };\n      const token = mutationResponse.data.login.token;\n      dispatch({\n        type: UPDATE_USER,\n        payload: data\n      })\n      Auth.login(token);\n      navigate('/')\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 form-card-div\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n            className=\"m-1\"\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n            className=\"m-1\"\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"col-12 col-lg-3 m-1\">\n          <button className=\"btn btn-secondary my-1\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Signup.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\auth.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\About.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\GlobalState.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\reducers.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\utils\\actions.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\PlacesAutocomplete.js",["147","148","149"],"import React, { useState, useMemo, useRef } from 'react';\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\n\r\nfunction PlacesAutocomplete(props) {\r\n    const {\r\n        ready,\r\n        value,\r\n        suggestions: { status, data },\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions: {\r\n            /* Define search scope here */\r\n        },\r\n        debounce: 300,\r\n    });\r\n    const ref = useOnclickOutside(() => {\r\n        // When user clicks outside of the component, we can dismiss\r\n        // the searched suggestions by calling this method\r\n        clearSuggestions();\r\n    });\r\n\r\n    const handleInput = (e) => {\r\n        // Update the keyword of the input element\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSelect =\r\n        ({ description }) =>\r\n            async () => {\r\n                // When user selects a place, we can replace the keyword without request data from API\r\n                // by setting the second parameter to \"false\"\r\n                await setValue(description, false);\r\n                clearSuggestions();\r\n\r\n                // Get latitude and longitude via utility functions\r\n                await getGeocode({ address: description }).then((results) => {\r\n                    const { lat, lng } = getLatLng(results[0]);\r\n                    // set map to this location\r\n                    props.zoomToSearchAddress({ lat: lat, lng: lng })\r\n                });\r\n            };\r\n\r\n    const renderSuggestions = () =>\r\n        data.map((suggestion) => {\r\n            const {\r\n                place_id,\r\n                structured_formatting: { main_text, secondary_text },\r\n            } = suggestion;\r\n\r\n            return (\r\n                <li key={place_id} onClick={handleSelect(suggestion)}>\r\n                    <strong>{main_text}</strong> <small>{secondary_text}</small>\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <div ref={ref} className=\"w-100 p-2\">\r\n            <input className=\"w-100\"\r\n                value={value}\r\n                onChange={handleInput}\r\n                disabled={!ready}\r\n                placeholder=\"Search for a nearby address...\"\r\n            />\r\n            {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\r\n            {status === \"OK\" && <ul>{renderSuggestions()}</ul>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlacesAutocomplete","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Home\\SubmitForm.js",["150"],"import React, { useState } from 'react';\n\nfunction ProjectForm(props) {\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        // Database update\n        try {\n            console.log(\"Project Submitted\")\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>Step 5: Review Your Data and Submit</u></h4>\n            <p>Please review your data above, and press the Project Submit Button when ready.</p>\n            <form\n                className=\"form-contents-div\"\n                onSubmit={handleFormSubmit}\n            >\n                <div className=\"col-12 col-lg-3 m-1\">\n                    <button className=\"btn btn-danger my-1\" type=\"submit\">Submit Project</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ProjectForm;","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Projects.js",[],"C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectList.js",["151","152","153"],"import React, { useEffect } from 'react';\nimport ProjectCard from './ProjectCard';\nimport { useUserContext } from '../../utils/GlobalState';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PROJECTS } from '../../utils/queries';\n\nfunction ProjectList() {\n  const [state, dispatch] = useUserContext();\n\n  const { loading, data } = useQuery(QUERY_PROJECTS);\n\n  // function filterProducts() {\n  //   if (!currentCategory) {\n  //     return state.products;\n  //   }\n\n  //   return state.products.filter(\n  //     (product) => product.category._id === currentCategory\n  //   );\n  // }\n  if (loading) {\n\n    return <div>Loading...</div>;\n  } else {\n    const projectsArray = data.projects;\n\n    return (\n      <div className=\"my-2\">\n        <h2>Projects:</h2>\n        {data ? (\n          <div className=\"flex-row\">\n            {projectsArray.map((project) => (\n              <ProjectCard\n                _id={project._id}\n                key={project.name}\n                name={project.name}\n                reference={project.reference}\n              />\n            ))}\n            <p>testing</p>\n          </div>\n\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\nexport default ProjectList;\n","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\components\\Projects\\ProjectCard.js",["154","155","156","157","158","159"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/client';\n\n// Context and reducer imports\nimport { UPDATE_PROJECT } from '../../utils/actions';\nimport { useUserContext } from \"../../utils/GlobalState\";\n\nfunction ProjectCard(props) {\n    // Add context and state\n    const [state, dispatch] = useUserContext();\n    const [formState, setFormState] = useState();\n    return (\n        <div className=\"form-card-div\">\n            <h4><u>{props.name}</u></h4>\n            <p>{props.reference}</p>\n            <Link to={`/projects/${props._id}`}>View Project</Link>\n        </div>\n    );\n};\n\nexport default ProjectCard;","C:\\Users\\timot\\Documents\\trilogy\\bridge-concepts\\client\\src\\pages\\Project.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":7,"column":9,"nodeType":"166","messageId":"167","endLine":7,"endColumn":17},{"ruleId":"164","severity":1,"message":"168","line":9,"column":9,"nodeType":"166","messageId":"167","endLine":9,"endColumn":17},{"ruleId":"164","severity":1,"message":"169","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"170","line":9,"column":17,"nodeType":"166","messageId":"167","endLine":9,"endColumn":25},{"ruleId":"164","severity":1,"message":"171","line":11,"column":12,"nodeType":"166","messageId":"167","endLine":11,"endColumn":17},{"ruleId":"164","severity":1,"message":"172","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"172","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"172","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"173","line":9,"column":12,"nodeType":"166","messageId":"167","endLine":9,"endColumn":21},{"ruleId":"164","severity":1,"message":"174","line":9,"column":23,"nodeType":"166","messageId":"167","endLine":9,"endColumn":35},{"ruleId":"164","severity":1,"message":"175","line":2,"column":36,"nodeType":"166","messageId":"167","endLine":2,"endColumn":42},{"ruleId":"164","severity":1,"message":"176","line":2,"column":44,"nodeType":"166","messageId":"167","endLine":2,"endColumn":56},{"ruleId":"164","severity":1,"message":"177","line":2,"column":68,"nodeType":"166","messageId":"167","endLine":2,"endColumn":77},{"ruleId":"164","severity":1,"message":"178","line":2,"column":94,"nodeType":"166","messageId":"167","endLine":2,"endColumn":112},{"ruleId":"164","severity":1,"message":"179","line":18,"column":12,"nodeType":"166","messageId":"167","endLine":18,"endColumn":15},{"ruleId":"164","severity":1,"message":"180","line":18,"column":17,"nodeType":"166","messageId":"167","endLine":18,"endColumn":23},{"ruleId":"164","severity":1,"message":"181","line":20,"column":11,"nodeType":"166","messageId":"167","endLine":20,"endColumn":17},{"ruleId":"164","severity":1,"message":"182","line":81,"column":11,"nodeType":"166","messageId":"167","endLine":81,"endColumn":17},{"ruleId":"164","severity":1,"message":"171","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":15},{"ruleId":"164","severity":1,"message":"169","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"183","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":34},{"ruleId":"164","severity":1,"message":"184","line":1,"column":36,"nodeType":"166","messageId":"167","endLine":1,"endColumn":42},{"ruleId":"164","severity":1,"message":"169","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"185","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"171","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":15},{"ruleId":"164","severity":1,"message":"170","line":8,"column":17,"nodeType":"166","messageId":"167","endLine":8,"endColumn":25},{"ruleId":"164","severity":1,"message":"186","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":21},{"ruleId":"164","severity":1,"message":"187","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":24},{"ruleId":"164","severity":1,"message":"171","line":11,"column":12,"nodeType":"166","messageId":"167","endLine":11,"endColumn":17},{"ruleId":"164","severity":1,"message":"170","line":11,"column":19,"nodeType":"166","messageId":"167","endLine":11,"endColumn":27},{"ruleId":"164","severity":1,"message":"173","line":12,"column":12,"nodeType":"166","messageId":"167","endLine":12,"endColumn":21},{"ruleId":"164","severity":1,"message":"174","line":12,"column":23,"nodeType":"166","messageId":"167","endLine":12,"endColumn":35},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'state' is assigned a value but never used.","'Link' is defined but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'Marker' is defined but never used.","'Autocomplete' is defined but never used.","'Rectangle' is defined but never used.","'GroundOverlayProps' is defined but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","'mapRef' is assigned a value but never used.","'onLoad' is assigned a value but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useMutation' is defined but never used.","'UPDATE_PROJECT' is defined but never used.","no-global-assign","no-unsafe-negation"]